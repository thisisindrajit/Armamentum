{"version":3,"sources":["Body/Login/LoginButton.js","Body/Login/Loading.js","Body/Welcome/Welcome.js","Body/Notes/Notes.js","Body/Quote/Quote.js","Body/Weather/Weather.js","Body/Pictures/Pictures.js","Body/Dictionary/Dictionary.js","Body/NumberFacts/NumberFacts.js","Body/QuickLinks/QuickLinks.js","Body/Login/Logout.js","Layout.js","Body/Login/Login.js","index.js","logo_black.png","Body/Login/loading.gif","logo.png"],"names":["LoginButton","loginWithRedirect","useAuth0","id","onClick","Loading","src","loading","alt","style","height","Component","Welcome","hour","Date","getHours","Notes","inputHandler","e","index","secindex","newNotes","state","notes","target","value","setState","createHandler","data","title","newnotetitle","body","newnotebody","fetch","method","headers","JSON","stringify","then","res","json","updateStatus","forEach","val","isLoading","showcreatenewnotebox","openbox","createnoteinputHandler","name","updateHandler","isUpdating","newbody","deleteHandler","autosize","document","querySelectorAll","console","log","this","props","user","email","className","onChange","placeholder","rows","map","note","key","defaultValue","PureComponent","Quote","quote","author","response","content","catch","err","Weather","weather","temp","undefined","url","enableLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","message","Math","round","Picture","picgeneratorlinks","picurl","promisesarray","Promise","all","img","href","rel","marginBottom","client","require","Owlbot","Dictionary","searchHandler","preventDefault","error","define","word","result","definitions","onSubmit","type","autoComplete","length","pronunciation","definition","example","renderHTML","NumberFacts","fact","number","text","QuickLinks","toggleBox","toggleLinkBox","setLink","linkarr","links","i","alert","push","localStorage","setItem","parse","getItem","deleteLink","filter","link","hasOwnProperty","window","open","width","viewBox","fill","xmlns","d","fillRule","LogoutButton","logout","returnTo","location","Layout","useState","toLocaleTimeString","time","setTime","optionsboxopen","setoptionsboxopen","wallpapertype","setwallpapertype","backgroundImage","backgroundColor","tick","useEffect","setInterval","logo","picture","Logout","Login","isAuthenticated","ReactDOM","render","domain","process","clientId","redirectUri","getElementById","module","exports"],"mappings":"yMASeA,EANK,WAAO,IACjBC,EAAsBC,cAAtBD,kBAER,OAAO,yBAAKE,GAAG,eAAeC,QAAS,kBAAMH,MAAtC,U,sECHYI,E,uKAIjB,OACI,yBAAKF,GAAG,eACJ,yBAAKG,IAAKC,IAASC,IAAI,cAAcC,MAAO,CAACC,OAAO,gB,GAN3BC,a,QCAhBC,G,mLAIjB,IAAIC,GAAO,IAAIC,MAAOC,WAEtB,OACI,yBAAKZ,GAAG,WACR,yBAAKA,GAAG,WACHU,EAAO,GAAK,eAAiBA,EAAO,GAAK,iBAAmBA,EAAO,GAAK,eAAiB,aAD9F,U,GAR6BF,c,0DCChBK,E,kDACnB,aAAe,IAAD,8BACZ,gBA8BFC,aAAe,SAACC,EAAGC,EAAOC,GACxB,IAAMC,EAAQ,YAAO,EAAKC,MAAMC,OAChCF,EAASF,GAAOC,GAAYF,EAAEM,OAAOC,MACrC,EAAKC,SAAS,CAAEH,MAAOF,KAlCX,EAqCdM,cAAgB,WACd,IAAMC,EAAO,CACXC,MAAO,EAAKP,MAAMQ,aAClBC,KAAM,EAAKT,MAAMU,aAGnBC,MAAM,kDAAmD,CACvDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BJ,KAAMK,KAAKC,UAAUT,KAEpBU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,WACJL,MAAM,0CACHK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,IAAIE,EAAe,GAGnBF,EAAIG,SAAQ,SAACC,EAAKxB,GAChBsB,EAAatB,GAAS,MAGxB,EAAKO,SAAS,CACZH,MAAOgB,EACPK,WAAW,EACXd,aAAc,GACdE,YAAa,GACba,sBAAsB,EACtBJ,aAAcA,WAlEZ,EAwEdK,QAAU,WACR,EAAKpB,SAAS,CAAEmB,sBAAuB,EAAKvB,MAAMuB,wBAzEtC,EA4EdE,uBAAyB,SAAC7B,GACxB,EAAKQ,SAAL,eAAiBR,EAAEM,OAAOwB,KAAO9B,EAAEM,OAAOC,SA7E9B,EAgFdwB,cAAgB,SAAC9C,EAAIgB,GACnB,IAAIsB,EAAe,EAAKnB,MAAMmB,aAC9BA,EAAatB,GAAS,cAEtB,EAAKO,SAAS,CAAEwB,YAAY,EAAMT,aAAcA,IAEhD,IAAMU,EAAU,CACdtB,MAAO,EAAKP,MAAMC,MAAMJ,GAAO,GAC/BY,KAAM,EAAKT,MAAMC,MAAMJ,GAAO,IAGhCc,MAAM,qDAAuD9B,EAAI,CAC/D+B,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BJ,KAAMK,KAAKC,UAAUc,KACpBb,MAAK,WAENG,EAAatB,GAAS,WACtB,EAAKO,SAAS,CAAEwB,YAAY,EAAOT,aAAcA,QAlGvC,EAuGdW,cAAgB,SAACjD,GACf8B,MAAM,qDAAuD9B,EAAI,CAC/D+B,OAAQ,WACPI,MAAK,WACNL,MAAM,0CACHK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,EAAKb,SAAS,CACZH,MAAOgB,EACPK,WAAW,EACXC,sBAAsB,WA/G9B,EAAKvB,MAAQ,CACXC,MAAO,GACPqB,WAAW,EACXM,YAAY,EACZpB,aAAc,GACdE,YAAa,GACba,sBAAsB,EACtBJ,aAAc,IATJ,E,gEAeO,IAAD,OAGlBR,MAAM,0CACHK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAEL,EAAKb,SAAS,CAAEH,MAAOgB,EAAKK,WAAW,S,2CAK3CS,IAASC,SAASC,iBAAiB,gBACnCF,IAASC,SAASC,iBAAiB,qB,+BA2F3B,IAAD,OAMP,OAHAC,QAAQC,IAAIC,KAAKC,MAAMC,MAGU,kCAA1BF,KAAKC,MAAMC,KAAKC,MAErB,yBAAK1D,GAAG,SACN,yBAAKA,GAAG,kBAAkBC,QAAS,kBAAM,EAAK0C,YAA9C,sBAG0B,IAAzBY,KAAKpC,MAAMsB,UACV,yBAAKzC,GAAG,WAAR,yBAEAuD,KAAKpC,MAAMuB,sBACT,yBAAK1C,GAAG,uBACN,8BACE2D,UAAU,aACVd,KAAM,eACNe,SAAU,SAAC7C,GAAD,OAAO,EAAK6B,uBAAuB7B,IAC7C8C,YAAa,aACbvC,MAAOiC,KAAKpC,MAAMQ,aAClBmC,KAAM,IAER,yBAAKH,UAAU,aACb,8BACEA,UAAU,gBACVd,KAAM,cACNe,SAAU,SAAC7C,GAAD,OAAO,EAAK6B,uBAAuB7B,IAC7C8C,YAAa,YACbvC,MAAOiC,KAAKpC,MAAMU,YAClBiC,KAAM,KAGV,yBAAKH,UAAU,WACb,yBACE3D,GAAG,qBACHC,QAAS,kBAAM,EAAKuB,kBAFtB,YAUP+B,KAAKpC,MAAMC,MAAM2C,KAAI,SAACC,EAAMhD,GAC3B,OACE,yBAAK2C,UAAU,OAAOM,IAAKD,EAAK,GAAG,QAAQhE,IACzC,8BACE2D,UAAU,aACVd,KAAM,QACNe,SAAU,SAAC7C,GAAD,OAAO,EAAKD,aAAaC,EAAGC,EAAO,IAC7CkD,aAAcF,EAAK,GACnBF,KAAM,IAER,yBAAKH,UAAU,aACb,8BACEA,UAAU,gBACVd,KAAM,OACNe,SAAU,SAAC7C,GAAD,OAAO,EAAKD,aAAaC,EAAGC,EAAO,IAC7CkD,aAAcF,EAAK,GACnBF,KAAM,KAGV,yBAAKH,UAAU,WACb,yBAAKA,UAAU,iBACZ,EAAKxC,MAAMmB,aAAatB,IAE3B,yBACE2C,UAAU,gBACV1D,QAAS,kBAAM,EAAKgD,cAAce,EAAK,GAAG,QAAQhE,MAFpD,UAMA,yBACE2D,UAAU,cACV1D,QAAS,kBAAM,EAAK6C,cAAckB,EAAK,GAAG,QAAQhE,GAAIgB,KAFxD,cAYV,yBAAKhB,GAAG,WAAR,yC,GA/M6BmE,iBCDdC,G,wDAEjB,WAAYZ,GACX,IAAD,8BACA,cAAMA,IACDrC,MAAM,CACPkD,MAAM,GACNC,OAAO,IAJX,E,gEAQoB,IAAD,OACfxC,MAAM,kCACLK,MAAK,SAAAoC,GAAQ,OAAIA,EAASlC,UAC1BF,MAAK,SAAAV,GACF,EAAKF,SAAS,CAAC8C,MAAM5C,EAAK+C,QAASF,OAAO7C,EAAK6C,YAElDG,OAAM,SAACC,GAAD,OAASrB,QAAQC,IAAIoB,Q,+BAKhC,OACI,yBAAK1E,GAAG,SACA,0BAAMA,GAAG,WAAWuD,KAAKpC,MAAMkD,OACT,KAArBd,KAAKpC,MAAMkD,OAAgB,yBAAKrE,GAAG,SACpC,0BAAMA,GAAG,UAAUuD,KAAKpC,MAAMmD,a,GA1BX9D,c,yBCAdmE,G,wDACnB,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDrC,MAAQ,CACXyD,QAAS,CACGC,KAAM,CACJvD,WAAOwD,IAGrBrC,WAAW,EACXsC,IAAI,GACJC,gBAAe,GAVA,E,yLAgBbC,UAAUC,Y,gCACND,UAAUC,YAAYC,oBAAmB,SAACC,GAChD,EAAK7D,SAAS,CAACwD,IACf,oDAAsDK,EAASC,OAAOC,SAAW,QAAUF,EAASC,OAAOE,UAA3G,sEAAsMP,gBAAe,O,4IAKpM,IAAD,OAEI,KAAnBzB,KAAKpC,MAAM4D,MAAuC,IAAzBxB,KAAKpC,MAAMsB,WAEvCX,MAAMyB,KAAKpC,MAAM4D,KACd5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACV,GAGgB,4BAAjBA,EAAK+D,QACP,EAAKjE,SAAS,CACZqD,QAAS,CACPC,KAAM,CACJvD,WAAOwD,IAGXrC,WAAW,IAGb,EAAKlB,SAAS,CAAEqD,QAASnD,EAAMgB,WAAW,OAG7CgC,OAAM,SAACC,GACNrB,QAAQC,IAAIoB,GACZ,EAAKnD,SAAS,CAAEkB,WAAW,S,+BAM/B,OAAgC,IAAzBc,KAAKpC,MAAMsB,gBACkBqC,IAAlCvB,KAAKpC,MAAMyD,QAAQC,KAAKvD,MACxB,yBAAKtB,GAAG,WACN,yBAAKA,GAAG,QAAR,wCACA,0BAAMA,GAAG,eACNyF,KAAKC,MAAMnC,KAAKpC,MAAMyD,QAAQC,KAAKvD,OAAS,UAIjD,yBAAKtB,GAAG,WACN,+BAAgC,IAAzBuD,KAAKpC,MAAMsB,YAAoD,IAA9Bc,KAAKpC,MAAM6D,eAA0B,cAA6C,IAA9BzB,KAAKpC,MAAM6D,eAA2B,kCAAoC,sD,GAjEzIb,kBCAhBwB,G,wDAEjB,WAAYnC,GACX,IAAD,8BACA,cAAMA,IACDrC,MAAM,CACPyE,kBAAmB,CAAC,2CACpB,2CACA,2CACA,4CACAC,OAAO,GAEPpD,WAAU,GATd,E,gEAaoB,IAAD,OAEXqD,EAAgB,GAEpBvC,KAAKpC,MAAMyE,kBAAkB7B,KAAI,SAACvB,EAAKxB,GAAN,OAAgB8E,EAAc9E,GAASc,MAAMU,MAI9EuD,QAAQC,IAAIF,GACP3D,MAAK,SAAAV,GAEF,IAAIsD,EAAM,GAEVtD,EAAKsC,KAAI,SAACvB,EAAKxB,GAAN,OAAgB+D,EAAI/D,GAASwB,EAAIuC,OAE1C,EAAKxD,SAAS,CAACkB,WAAU,EAAOoD,OAAQd,S,+BAYpD,OACI,yBAAK/E,GAAG,gBACR,0BAAMA,GAAG,SAAT,iBAC0B,IAAzBuD,KAAKpC,MAAMsB,UACZc,KAAKpC,MAAM0E,OAAO9B,KAAI,SAACkC,EAAKjF,GACxB,OACI,uBAAGkF,KAAMD,EAAKhC,IAAKjD,EAAOmF,IAAI,sBAAsB9E,OAAO,UAAS,yBAAKsC,UAAU,aAAaxD,IAAK8F,EAAK5F,IAAI,qBAEjH,0BAAMC,MAZM,CACjB8F,aAAa,SAWR,sC,GAnDwBjC,kB,yBCEjCkC,EAFSC,EAAQ,IAERC,CAAO,4CAECC,E,kDACnB,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IAWR1C,aAAe,SAACC,GACd,EAAKQ,SAAL,eAAiBR,EAAEM,OAAOwB,KAAO9B,EAAEM,OAAOC,SAbzB,EAgBnBmF,cAAgB,SAAC1F,GACfA,EAAE2F,iBACF,EAAKnF,SAAS,CAAEkB,WAAW,EAAMkE,OAAM,IAEvCN,EACGO,OAAO,EAAKzF,MAAM0F,MAClB1E,MAAK,SAAC2E,GAEL,EAAKvF,SAAS,CAAEsF,KAAM,GAAIpE,WAAW,EAAOqE,OAAQA,OAErDrC,OAAM,SAACC,GACNrB,QAAQC,IAAIoB,GACZ,EAAKnD,SAAS,CAAEoF,OAAO,EAAMlE,WAAW,EAAOoE,KAAM,SA1BzD,EAAK1F,MAAQ,CACX0F,KAAM,GACNpE,WAAW,EACXkE,OAAO,EACPG,OAAQ,CACNC,YAAa,KAPA,E,qDAiCjB,OACE,yBAAK/G,GAAG,cAAR,aAEE,yBAAKA,GAAG,UACR,0BAAM+B,OAAO,OAAOiF,SAAUzD,KAAKkD,eACjC,2BACEQ,KAAK,OACLpE,KAAK,OACLgB,YAAY,8BACZvC,MAAOiC,KAAKpC,MAAM0F,KAClBK,aAAa,MACbtD,SAAUL,KAAKzC,eAEjB,yBAAK6C,UAAU,WACb,4BAAQ3D,GAAG,gBAAgBiH,KAAK,UAAhC,cAOkB,IAArB1D,KAAKpC,MAAMwF,QACXpD,KAAKpC,MAAMsB,WAAac,KAAKpC,MAAM2F,OAAOC,YAAYI,OAAS,GAC9D,yBAAKnH,GAAG,WACoB,IAAzBuD,KAAKpC,MAAMsB,UACV,eACEc,KAAKpC,MAAM2F,OAAOC,YAAYI,OAAS,EACzC,yBAAKnH,GAAG,kBACN,yBAAKA,GAAG,OACN,0BAAMA,GAAG,QAAQuD,KAAKpC,MAAM2F,OAAOD,MAClCtD,KAAKpC,MAAM2F,OAAOM,eACjB,0BAAMpH,GAAG,iBAAT,IACIuD,KAAKpC,MAAM2F,OAAOM,cADtB,MAKH7D,KAAKpC,MAAM2F,OAAOC,YAAYhD,KAAI,SAACsD,EAAYrG,GAC9C,OACE,yBAAK2C,UAAU,UAAUM,IAAKjD,GAC3BqG,EAAWJ,MACV,0BAAMtD,UAAU,QAAQ0D,EAAWJ,MAErC,0BAAMtD,UAAU,cACb0D,EAAWA,YAEbA,EAAWC,SACV,0BAAM3D,UAAU,WACd,uCADF,IACmB4D,IAAWF,EAAWC,eAOjD,MAEJ,MACkB,IAArB/D,KAAKpC,MAAMwF,OACV,6BAAM,uD,GA5FwBxC,iBCJnBqD,G,yDACnB,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IACDrC,MAAQ,CACXsB,WAAW,EACXgF,KAAM,IAJS,E,gEAQE,IAAD,OAClB3F,MAAM,yCACHK,MAAK,SAACoC,GAAD,OAAcA,EAASlC,UAC5BF,MAAK,SAACV,GAEL,EAAKF,SAAS,CAAEkB,WAAW,EAAOgF,KAAMhG,OAEzCgD,OAAM,SAACC,GACNrB,QAAQC,IAAIoB,Q,+BAKhB,OAAgC,IAAzBnB,KAAKpC,MAAMsB,UAChB,yBAAKzC,GAAG,YACH,qBAAuBuD,KAAKpC,MAAMsG,KAAKC,OACxC,0BAAM1H,GAAG,QAAQuD,KAAKpC,MAAMsG,KAAKE,OACnC,yBAAK3H,GAAG,oBAAR,kC,GA1BiCmE,kBCApByD,G,yDACnB,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IAWRqE,UAAY,WACV,EAAKtG,SAAS,CAAEuG,eAAgB,EAAK3G,MAAM2G,iBAb1B,EAgBnBhH,aAAe,SAACC,GACd,EAAKQ,SAAL,eAAiBR,EAAEM,OAAOwB,KAAO9B,EAAEM,OAAOC,SAjBzB,EAoBnByG,QAAU,SAAClF,GACT,IAAImF,EAAU,EAAK7G,MAAM8G,MAEzB,GAAgC,IAA5B,EAAK9G,MAAMO,MAAMyF,QAA0C,IAA1B,EAAKhG,MAAM4D,IAAIoC,OAApD,CAKA,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAQb,OAAQe,IAClC,GAAIF,EAAQE,GAAGxG,QAAUmB,EAEvB,YADAsF,MAAM,wDAKVH,EAAQI,KAAK,CACX1G,MAAO,EAAKP,MAAMO,MAClBqD,IAAK,EAAK5D,MAAM4D,MAIlBsD,aAAaC,QAAQ,cAAerG,KAAKC,UAAU8F,IACnD,EAAKzG,SAAS,CACZ0G,MAAOhG,KAAKsG,MAAMF,aAAaG,QAAQ,gBACvC9G,MAAO,GACPqD,IAAK,GACL+C,eAAe,SAtBfK,MAAM,mCAxBS,EAkDnBM,WAAa,SAAC5F,GACZ,IAAImF,EAAU,EAAK7G,MAAM8G,MAEzBD,EAAUA,EAAQU,QAAO,SAACC,GAAD,OAAUA,EAAKjH,QAAUmB,KAElDwF,aAAaC,QAAQ,cAAerG,KAAKC,UAAU8F,IACnD,EAAKzG,SAAS,CACZ0G,MAAOhG,KAAKsG,MAAMF,aAAaG,QAAQ,gBACvC9G,MAAO,GACPqD,IAAK,GACL+C,eAAe,KA1DjB,EAAK3G,MAAQ,CACX8G,MAAOI,aAAaO,eAAe,eAC/B3G,KAAKsG,MAAMF,aAAaG,QAAQ,gBAChC,GACJV,eAAe,EACfpG,MAAO,GACPqD,IAAK,IARU,E,qDAgET,IAAD,OACP,OACE,yBAAK/E,GAAG,eACN,yBAAKA,GAAG,WAAWC,QAASsD,KAAKsE,WAAjC,oBAICtE,KAAKpC,MAAM2G,eACV,yBAAK9H,GAAG,gBACN,2BACEiH,KAAK,OACLpE,KAAK,QACLgB,YAAY,kBACZvC,MAAOiC,KAAKpC,MAAMO,MAClBwF,aAAa,MACbtD,SAAUL,KAAKzC,eAEjB,2BACEmG,KAAK,OACLpE,KAAK,MACLgB,YAAY,gBACZvC,MAAOiC,KAAKpC,MAAM4D,IAClBmC,aAAa,MACbtD,SAAUL,KAAKzC,eAEjB,yBACEd,GAAG,cACHC,QAAS,kBAAM,EAAK8H,QAAQ,EAAK5G,MAAMO,SAFzC,gBAQH6B,KAAKpC,MAAM8G,MAAMlE,KAAI,SAAC4E,EAAM3H,GAC3B,IAAM6B,EAAO8F,EAAKjH,MACZqD,EAAM4D,EAAK5D,IACjB,OACE,yBAAKd,IAAKjD,EAAO2C,UAAU,YACzB,0BACEA,UAAU,aACV1D,QAAS,WACP4I,OAAOC,KAAK/D,EAAK,YAGlBlC,GAEH,yBAAKc,UAAU,SACb,yBACEA,UAAU,UACVoF,MAAM,QACNxI,OAAO,QACPyI,QAAQ,YACRC,KAAK,UACLC,MAAM,6BACNjJ,QAAS,kBAAM,EAAKwI,WAAW5F,KAE/B,0BAAMsG,EAAE,oKACR,0BACEC,SAAS,UACTD,EAAE,0P,GA5HkBhF,kBCUzBkF,EAVM,WAAO,IAClBC,EAAWvJ,cAAXuJ,OAER,OACE,yBAAKtJ,GAAG,gBAAgBC,QAAS,kBAAMqJ,EAAO,CAAEC,SAAUV,OAAOW,SAAStD,SAA1E,WCqLWuD,EAhGA,SAACjG,GAAW,IAAD,EACAkG,oBAAS,IAAI/I,MAAOgJ,sBADpB,mBACjBC,EADiB,KACXC,EADW,OAEoBH,oBAAS,GAF7B,mBAEjBI,EAFiB,KAEDC,EAFC,KAKnB1B,aAAaO,eAAe,YAC/BP,aAAaC,QAAQ,UAAW,aANV,MASkBoB,mBAASrB,aAAaG,QAAQ,YAThD,mBASjBwB,EATiB,KASFC,EATE,KAWF,cAAlBD,EACF7G,SAASvB,KAAKtB,MAAM4J,gBAClB,yHAEF/G,SAASvB,KAAKtB,MAAM4J,gBAAkB,OACtC/G,SAASvB,KAAKtB,MAAM6J,gBAAkB,WAGxC,IAAMC,EAAO,WACXP,GAAQ,IAAIlJ,MAAOgJ,uBAiBrBU,qBAAU,WACRC,YAAYF,EAAM,QAtCI,IAyChB3G,EAAS1D,cAAT0D,KAIR,OACE,yBAAKzD,GAAG,MAEN,yBAAKA,GAAG,gBACN,yBAAKG,IAAKoK,IAAMlK,IAAI,OAAOL,GAAG,SAC9B,0BAAMA,GAAG,SAAT,cACA,yBAAKA,GAAG,QACN,4BAAK4J,IAEP,yBAAK5J,GAAG,eACN,yBACEG,IAAKsD,EAAK+G,QACVnK,IAAI,kBACJJ,QAnCe,WACvB8J,GAAmBD,MAoCZA,GACC,yBAAK9J,GAAG,gBACN,yBAAKC,QAnCO,WACA,cAAlB+J,GACF3B,aAAaC,QAAQ,UAAW,QAChC2B,EAAiB,UAEjB5B,aAAaC,QAAQ,UAAW,aAChC2B,EAAiB,gBA8BY,cAAlBD,EACG,eACA,oBAEN,6BACE,kBAACS,EAAD,UAQV,yBAAKzK,GAAG,QACN,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,GAAG,eACN,yBAAKA,GAAG,UACN,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,GAAG,WACN,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOyD,KAAMA,SCrJViH,EAvBD,SAAClH,GAAW,IAAD,EAEkBzD,cAA/B0C,EAFa,EAEbA,UAAWkI,EAFE,EAEFA,gBAEnB,OAAIlI,EACO,kBAAC,EAAD,MAGPkI,EACO,kBAAC,EAAD,MAIP,yBAAK3K,GAAG,aACJ,yBAAKA,GAAG,OAAOG,IAAKoK,IAAMlK,IAAI,oBADlC,yBAGI,kBAAC,EAAD,MAEA,0BAAML,GAAG,WAAT,6FAA6G,uBAAGkG,KAAK,6CAA6C7E,OAAO,SAAS8E,IAAI,uBAAzE,cAA7G,6BCrBZyE,IAASC,OACP,kBAAC,IAAD,CACIC,OAAQC,4BACRC,SAAUD,mCACVE,YAAapC,OAAOW,SAAStD,MAE/B,kBAAC,EAAD,OAEF/C,SAAS+H,eAAe,U,mBCb1BC,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.0c8ce3cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <div id=\"login-button\" onClick={() => loginWithRedirect()}>Login</div>;\r\n};\r\n\r\nexport default LoginButton;","import React, { Component } from 'react';\r\nimport loading from './loading.gif';\r\n\r\nexport default class Loading extends Component\r\n{\r\n    render() {\r\n\r\n    return(\r\n        <div id=\"loading-box\">\r\n            <img src={loading} alt=\"loading_gif\" style={{height:\"250px\"}}></img>\r\n        </div>\r\n    );\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport './welcome.css';\r\n\r\nexport default class Welcome extends Component\r\n{\r\n    render() {\r\n\r\n    var hour = new Date().getHours();\r\n\r\n    return(\r\n        <div id=\"content\">\r\n        <div id=\"welcome\">\r\n            {hour < 12 ? \"Good Morning\" : hour < 16 ? \"Good Afternoon\" : hour < 21 ? \"Good Evening\" : \"Good Night\"}!\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport \"./notes.css\";\r\nimport autosize from \"autosize\";\r\n\r\nexport default class Notes extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      notes: [],\r\n      isLoading: true,\r\n      isUpdating: false,\r\n      newnotetitle: \"\",\r\n      newnotebody: \"\",\r\n      showcreatenewnotebox: false,\r\n      updateStatus: [],\r\n    };\r\n  }\r\n\r\n  //https://armamentum.herokuapp.com/notes is the link for the hosted nodejs server\r\n\r\n  componentDidMount() {\r\n    //autosize(this.notebody);\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        //console.log(res);\r\n        this.setState({ notes: res, isLoading: false });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    autosize(document.querySelectorAll(\".note-title\"));\r\n    autosize(document.querySelectorAll(\".note-textarea\"));\r\n  }\r\n\r\n  inputHandler = (e, index, secindex) => {\r\n    const newNotes = [...this.state.notes];\r\n    newNotes[index][secindex] = e.target.value;\r\n    this.setState({ notes: newNotes });\r\n  };\r\n\r\n  createHandler = () => {\r\n    const data = {\r\n      title: this.state.newnotetitle,\r\n      body: this.state.newnotebody,\r\n    };\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes/postnote\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        fetch(\"https://armamentum.herokuapp.com/notes\")\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            let updateStatus = [];\r\n\r\n            //updateStatus for each note fetched from API\r\n            res.forEach((val, index) => {\r\n              updateStatus[index] = \"\";\r\n            });\r\n\r\n            this.setState({\r\n              notes: res,\r\n              isLoading: false,\r\n              newnotetitle: \"\",\r\n              newnotebody: \"\",\r\n              showcreatenewnotebox: false,\r\n              updateStatus: updateStatus,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  openbox = () => {\r\n    this.setState({ showcreatenewnotebox: !this.state.showcreatenewnotebox });\r\n  };\r\n\r\n  createnoteinputHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  updateHandler = (id, index) => {\r\n    let updateStatus = this.state.updateStatus;\r\n    updateStatus[index] = \"Updating...\";\r\n\r\n    this.setState({ isUpdating: true, updateStatus: updateStatus });\r\n\r\n    const newbody = {\r\n      title: this.state.notes[index][2],\r\n      body: this.state.notes[index][1],\r\n    };\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes/updatenote/\" + id, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(newbody),\r\n    }).then(() => {\r\n      //console.log(res);\r\n      updateStatus[index] = \"Updated!\";\r\n      this.setState({ isUpdating: false, updateStatus: updateStatus });\r\n      //alert(\"Updated note!\");\r\n    });\r\n  };\r\n\r\n  deleteHandler = (id) => {\r\n    fetch(\"https://armamentum.herokuapp.com/notes/deletenote/\" + id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      fetch(\"https://armamentum.herokuapp.com/notes\")\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          this.setState({\r\n            notes: res,\r\n            isLoading: false,\r\n            showcreatenewnotebox: false,\r\n          });\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props.name);\r\n\r\n    console.log(this.props.user);\r\n\r\n    //for now I have hardcoded the name (which is my email id in this case). Must change it later!\r\n    return this.props.user.email === \"indrajitvijayakumar@gmail.com\" ? \r\n    (\r\n      <div id=\"notes\">\r\n        <div id=\"create-new-note\" onClick={() => this.openbox()}>\r\n          Create a new note\r\n        </div>\r\n        {this.state.isLoading === true ? (\r\n          <div id=\"loading\">Loading your notes...</div>\r\n        ) : (\r\n          this.state.showcreatenewnotebox && (\r\n            <div id=\"create-new-note-box\">\r\n              <textarea\r\n                className=\"note-title\"\r\n                name={\"newnotetitle\"}\r\n                onChange={(e) => this.createnoteinputHandler(e)}\r\n                placeholder={\"Note title\"}\r\n                value={this.state.newnotetitle}\r\n                rows={1}\r\n              ></textarea>\r\n              <div className=\"note-body\">\r\n                <textarea\r\n                  className=\"note-textarea\"\r\n                  name={\"newnotebody\"}\r\n                  onChange={(e) => this.createnoteinputHandler(e)}\r\n                  placeholder={\"Note body\"}\r\n                  value={this.state.newnotebody}\r\n                  rows={1}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"buttons\">\r\n                <div\r\n                  id=\"create-note-button\"\r\n                  onClick={() => this.createHandler()}\r\n                >\r\n                  Create\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n        {this.state.notes.map((note, index) => {\r\n          return (\r\n            <div className=\"note\" key={note[3][\"@ref\"].id}>\r\n              <textarea\r\n                className=\"note-title\"\r\n                name={\"title\"}\r\n                onChange={(e) => this.inputHandler(e, index, 2)}\r\n                defaultValue={note[2]}\r\n                rows={1}\r\n              ></textarea>\r\n              <div className=\"note-body\">\r\n                <textarea\r\n                  className=\"note-textarea\"\r\n                  name={\"body\"}\r\n                  onChange={(e) => this.inputHandler(e, index, 1)}\r\n                  defaultValue={note[1]}\r\n                  rows={1}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"buttons\">\r\n                <div className=\"update-status\">\r\n                  {this.state.updateStatus[index]}\r\n                </div>\r\n                <div\r\n                  className=\"delete-button\"\r\n                  onClick={() => this.deleteHandler(note[3][\"@ref\"].id)}\r\n                >\r\n                  Delete\r\n                </div>\r\n                <div\r\n                  className=\"save-button\"\r\n                  onClick={() => this.updateHandler(note[3][\"@ref\"].id, index)}\r\n                >\r\n                  Save\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    ) : (\r\n      <div id=\"loading\">Notes Widget coming soon for you!</div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './quotes.css';\r\n\r\nexport default class Quote extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n    super(props);\r\n    this.state={\r\n        quote:\"\",\r\n        author:\"\"\r\n    };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://api.quotable.io/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({quote:data.content, author:data.author})\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    render() {\r\n\r\n    return(\r\n        <div id=\"quote\"> \r\n                <span id=\"content\">{this.state.quote}</span>\r\n                {this.state.quote !== \"\" && <div id=\"line\"></div>}\r\n                <span id=\"author\">{this.state.author}</span>\r\n        </div>\r\n    );\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport \"./weather.css\";\r\n\r\nexport default class Weather extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      weather: {\r\n                  temp: {\r\n                    value: undefined,\r\n                  }\r\n                },\r\n      isLoading: true,\r\n      url:\"\",\r\n      enableLocation:false\r\n    };\r\n  }\r\n  \r\n  async componentDidMount() {\r\n   \r\n    if (navigator.geolocation) {\r\n      await navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({url:\r\n      \"https://api.climacell.co/v3/weather/realtime?lat=\" + position.coords.latitude + \"&lon=\" + position.coords.longitude + \"&unit_system=si&fields=temp&apikey=\" + process.env.REACT_APP_WEATHER_API_KEY, enableLocation:true});\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n    if(this.state.url !== \"\" && this.state.isLoading === true){\r\n\r\n    fetch(this.state.url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n\r\n        if (data.message === \"API rate limit exceeded\") {\r\n          this.setState({\r\n            weather: {\r\n              temp: {\r\n                value: undefined,\r\n              },\r\n            },\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          this.setState({ weather: data, isLoading: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isLoading === false &&\r\n      this.state.weather.temp.value !== undefined ? (\r\n      <div id=\"weather\">\r\n        <div id=\"city\">Current temperature in your location</div>\r\n        <span id=\"temperature\">\r\n          {Math.round(this.state.weather.temp.value) + \"°C\"}\r\n        </span>\r\n      </div>\r\n    ) : (\r\n      <div id=\"weather\">\r\n        <span>{this.state.isLoading === true && this.state.enableLocation === true ? \"Loading...\" : this.state.enableLocation === false ? \"Please provide location access!\" : \"Sorry! Some error occurred! Please try again!\"}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './pictures.css';\r\n\r\nexport default class Picture extends PureComponent\r\n{\r\n    constructor(props)\r\n    {\r\n    super(props);\r\n    this.state={\r\n        picgeneratorlinks: [\"https://picsum.photos/1920/1080?random=1\",\r\n        \"https://picsum.photos/1920/1080?random=2\",\r\n        \"https://picsum.photos/1920/1080?random=3\",\r\n        \"https://picsum.photos/1920/1080?random=4\"],\r\n        picurl:[],\r\n        // downloadurl:[],\r\n        isLoading:true\r\n    };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let promisesarray = [];\r\n\r\n        this.state.picgeneratorlinks.map((val, index) => promisesarray[index] = fetch(val))\r\n\r\n        /*console.log(promisesarray);*/\r\n\r\n        Promise.all(promisesarray)\r\n            .then(data => {\r\n\r\n                let url = [];\r\n                \r\n                data.map((val, index) => url[index] = val.url);\r\n\r\n                this.setState({isLoading:false, picurl: url})\r\n            })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n    const loadingstyle = {\r\n        marginBottom:\"20px\"\r\n    }\r\n\r\n    return(\r\n        <div id=\"pictures-box\">\r\n        <span id=\"title\">Your Gallery</span>\r\n        {this.state.isLoading === false ?\r\n        this.state.picurl.map((img, index) => {\r\n            return(\r\n                <a href={img} key={index} rel=\"noopener noreferrer\" target=\"_blank\"><img className=\"img-holder\" src={img} alt=\"random_photo\"></img></a>\r\n            )\r\n        }) : <span style={loadingstyle}>📷Loading images...</span>}\r\n        </div>\r\n    );\r\n    }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./dictionary.css\";\r\nimport renderHTML from 'react-render-html';\r\nvar Owlbot = require(\"owlbot-js\");\r\n//OWLBOT API KEY - a73d4c94f67c7b70b93d1023e8f8095173fe430d\r\nvar client = Owlbot(\"a73d4c94f67c7b70b93d1023e8f8095173fe430d\");\r\n\r\nexport default class Dictionary extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      word: \"\",\r\n      isLoading: false,\r\n      error: false,\r\n      result: {\r\n        definitions: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  inputHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  searchHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isLoading: true, error:false });\r\n\r\n    client\r\n      .define(this.state.word)\r\n      .then((result) => {\r\n        //console.log(result);\r\n        this.setState({ word: \"\", isLoading: false, result: result });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ error: true, isLoading: false, word: \"\" });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"dictionary\">\r\n        Dictionary\r\n        <div id=\"search\">\r\n        <form method=\"POST\" onSubmit={this.searchHandler}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"word\"\r\n            placeholder=\"Enter the word to search...\"\r\n            value={this.state.word}\r\n            autoComplete=\"off\"\r\n            onChange={this.inputHandler}\r\n          ></input>\r\n          <div className=\"buttons\">\r\n            <button id=\"search-button\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </div>\r\n          </form>\r\n        </div>\r\n        {/* Search results box */}\r\n        {this.state.error === false &&\r\n        (this.state.isLoading || this.state.result.definitions.length > 0) ? (\r\n          <div id=\"search\">\r\n            {this.state.isLoading === true ? (\r\n              \"Searching...\"\r\n            ) : this.state.result.definitions.length > 0 ? (\r\n              <div id=\"search-results\">\r\n                <div id=\"top\">\r\n                  <span id=\"word\">{this.state.result.word}</span>\r\n                  {this.state.result.pronunciation && (\r\n                    <span id=\"pronunciation\">\r\n                      /{this.state.result.pronunciation}/\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {this.state.result.definitions.map((definition, index) => {\r\n                  return (\r\n                    <div className=\"def-box\" key={index}>\r\n                      {definition.type && (\r\n                        <span className=\"type\">{definition.type}</span>\r\n                      )}\r\n                      <span className=\"definition\">\r\n                        {definition.definition}\r\n                      </span>\r\n                      {definition.example && (\r\n                        <span className=\"example\">\r\n                          <b>Example:</b> {renderHTML(definition.example)}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n        {this.state.error === true && (\r\n          <div>{\"Sorry! No definition found for the given word!\"}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./numberfacts.css\";\r\n\r\nexport default class NumberFacts extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      fact: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://armamentum.herokuapp.com/fact\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        this.setState({ isLoading: false, fact: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.state.isLoading === false ? (\r\n      <div id=\"fact-box\">\r\n          {\"Fact about number \" + this.state.fact.number}\r\n          <span id=\"fact\">{this.state.fact.text}</span></div>\r\n    ) : <div id=\"fact-box-loading\">Fetching a fact for you...</div>;\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./quicklinks.css\";\r\n\r\nexport default class QuickLinks extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      links: localStorage.hasOwnProperty(\"quick-links\")\r\n        ? JSON.parse(localStorage.getItem(\"quick-links\"))\r\n        : [],\r\n      toggleLinkBox: false,\r\n      title: \"\",\r\n      url: \"\",\r\n    };\r\n  }\r\n\r\n  toggleBox = () => {\r\n    this.setState({ toggleLinkBox: !this.state.toggleLinkBox });\r\n  };\r\n\r\n  inputHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  setLink = (name) => {\r\n    var linkarr = this.state.links;\r\n\r\n    if (this.state.title.length === 0 || this.state.url.length === 0) {\r\n      alert(\"Please fill in all the fields!\");\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < linkarr.length; i++) {\r\n      if (linkarr[i].title === name) {\r\n        alert(\"This title already exists! Please enter a new title!\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    linkarr.push({\r\n      title: this.state.title,\r\n      url: this.state.url,\r\n    });\r\n\r\n    //localStorage cannot store arrays and objects. So we do JSON.stringify on the array to store it as a string and then parse it while we need the contents\r\n    localStorage.setItem(\"quick-links\", JSON.stringify(linkarr));\r\n    this.setState({\r\n      links: JSON.parse(localStorage.getItem(\"quick-links\")),\r\n      title: \"\",\r\n      url: \"\",\r\n      toggleLinkBox: false,\r\n    });\r\n  };\r\n\r\n  deleteLink = (name) => {\r\n    var linkarr = this.state.links;\r\n\r\n    linkarr = linkarr.filter((link) => link.title !== name);\r\n\r\n    localStorage.setItem(\"quick-links\", JSON.stringify(linkarr));\r\n    this.setState({\r\n      links: JSON.parse(localStorage.getItem(\"quick-links\")),\r\n      title: \"\",\r\n      url: \"\",\r\n      toggleLinkBox: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"quick-links\">\r\n        <div id=\"add-link\" onClick={this.toggleBox}>\r\n          + Add a new link\r\n        </div>\r\n\r\n        {this.state.toggleLinkBox && (\r\n          <div id=\"add-link-box\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Enter the title\"\r\n              value={this.state.title}\r\n              autoComplete=\"off\"\r\n              onChange={this.inputHandler}\r\n            ></input>\r\n            <input\r\n              type=\"text\"\r\n              name=\"url\"\r\n              placeholder=\"Enter the url\"\r\n              value={this.state.url}\r\n              autoComplete=\"off\"\r\n              onChange={this.inputHandler}\r\n            ></input>\r\n            <div\r\n              id=\"create-link\"\r\n              onClick={() => this.setLink(this.state.title)}\r\n            >\r\n              Create Link\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.state.links.map((link, index) => {\r\n          const name = link.title;\r\n          const url = link.url;\r\n          return (\r\n            <div key={index} className=\"link-box\">\r\n              <span\r\n                className=\"link-title\"\r\n                onClick={() => {\r\n                  window.open(url, \"_blank\");\r\n                }}\r\n              >\r\n                {name}\r\n              </span>\r\n              <div className=\"icons\">\r\n                <svg\r\n                  className=\"icons-2\"\r\n                  width=\"1.2em\"\r\n                  height=\"1.2em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"#E74C3C\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  onClick={() => this.deleteLink(name)}\r\n                >\r\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <div id=\"logout-button\" onClick={() => logout({ returnTo: window.location.href })}>\r\n      Logout\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","// import React, { PureComponent } from \"react\";\n// import TOPOLOGY from \"vanta/dist/vanta.topology.min\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./layout.css\";\nimport Welcome from \"./Body/Welcome/Welcome\";\nimport logo from \"./logo.png\";\nimport Notes from \"./Body/Notes/Notes\";\nimport Quote from \"./Body/Quote/Quote\";\nimport Weather from \"./Body/Weather/Weather\";\nimport Pictures from \"./Body/Pictures/Pictures\";\nimport Dictionary from \"./Body/Dictionary/Dictionary\";\nimport NumberFacts from \"./Body/NumberFacts/NumberFacts\";\nimport QuickLinks from \"./Body/QuickLinks/QuickLinks\";\nimport Logout from \"./Body/Login/Logout\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n//Have uninstalled Vanta package since it took a lot of processing to render the background, making the website slow\n// class Layout extends PureComponent {\n//   constructor() {\n//     super();\n//     this.state = {\n//       time: \"\",\n//     };\n//     //this.vantaRef = React.createRef();\n//   }\n\n//   tick = () => {\n//     this.setState({ time: new Date().toLocaleTimeString() });\n//   };\n\n//   componentDidMount() {\n//     // this.vantaEffect = TOPOLOGY({\n//     //   el: this.vantaRef.current,\n//     //   mouseControls: true,\n//     //   touchControls: true,\n//     //   gyroControls: false,\n//     //   minHeight: 200.0,\n//     //   minWidth: 200.0,\n//     //   scale: 1.0,\n//     //   scaleMobile: 1.0,\n//     //   color: 0xffc0,\n//     //   backgroundColor: 0x0,\n//     // });\n\n//     this.tick();\n//   }\n\n//   componentDidUpdate() {\n//     setInterval(this.tick, 1000);\n//   }\n\n//   // componentWillUnmount() {\n//   //   if (this.vantaEffect) this.vantaEffect.destroy();\n//   // }\n\n//   render() {\n\n//     const { isAuthenticated } = useAuth0();\n\n//     return (\n//       isAuthenticated && <div id=\"bg\">\n//         {/* logo and title */}\n//         <div id=\"titleandlogo\">\n//           <img src={logo} alt=\"logo\" id=\"logo\"></img>\n//           <span id=\"title\">ARMAMENTUM</span>\n//           <div id=\"time\">\n//             <h2>{this.state.time}</h2>\n//           </div>\n//         </div>\n\n//         {/*body*/}\n//         <div id=\"body\">\n//         <Welcome />\n//         <Quote />\n//         <div id=\"widget-grid\">\n//             <div id=\"left-1\">\n//             <Weather />\n//             <Dictionary />\n//             <Pictures />\n//             </div>\n//             <div id=\"right-1\">\n//             <NumberFacts />\n//             <Notes />\n//             </div>\n//         </div>\n//         </div>\n\n//       </div>\n//     );\n//   }\n// }\n\nconst Layout = (props) => {\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\n  const [optionsboxopen, setoptionsboxopen] = useState(false);\n\n  //setting wallpaper type for the first time\n  if (!localStorage.hasOwnProperty(\"bg-type\")) {\n    localStorage.setItem(\"bg-type\", \"wallpaper\");\n  }\n\n  const [wallpapertype, setwallpapertype] = useState(localStorage.getItem(\"bg-type\"));\n\n  if (wallpapertype === \"wallpaper\") {\n    document.body.style.backgroundImage =\n      'linear-gradient(to top, rgba(23, 32, 42, 0.20), rgba(0, 0, 0, 0.80)), url(\"https://picsum.photos/1920/1080?random=6\")';\n  } else {\n    document.body.style.backgroundImage = \"none\";\n    document.body.style.backgroundColor = \"#050505\";\n  }\n\n  const tick = () => {\n    setTime(new Date().toLocaleTimeString());\n  };\n\n  const toggleoptionsbox = () => {\n    setoptionsboxopen(!optionsboxopen);\n  };\n\n  const togglewallpaper = () => {\n    if (wallpapertype === \"wallpaper\") {\n      localStorage.setItem(\"bg-type\", \"none\");\n      setwallpapertype(\"none\");\n    } else {\n      localStorage.setItem(\"bg-type\", \"wallpaper\");\n      setwallpapertype(\"wallpaper\");\n    }\n  };\n\n  useEffect(() => {\n    setInterval(tick, 1000);\n  });\n\n  const { user } = useAuth0();\n\n  // console.log(user);\n\n  return (\n    <div id=\"bg\">\n      {/* logo and title */}\n      <div id=\"titleandlogo\">\n        <img src={logo} alt=\"logo\" id=\"logo\"></img>\n        <span id=\"title\">ARMAMENTUM</span>\n        <div id=\"time\">\n          <h2>{time}</h2>\n        </div>\n        <div id=\"options-box\">\n          <img\n            src={user.picture}\n            alt=\"profile_picture\"\n            onClick={toggleoptionsbox}\n          ></img>\n          {optionsboxopen && (\n            <div id=\"options-list\">\n              <div onClick={togglewallpaper}>\n                {wallpapertype === \"wallpaper\"\n                  ? \"No Wallpaper\"\n                  : \"Random Wallpaper\"}\n              </div>\n              <div>\n                <Logout />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/*body*/}\n      <div id=\"body\">\n        <Welcome />\n        <Quote />\n        <div id=\"widget-grid\">\n          <div id=\"left-1\">\n            <Weather />\n            <QuickLinks />\n            <Dictionary />\n            <Pictures />\n          </div>\n          <div id=\"right-1\">\n            <NumberFacts />\n            <Notes user={user} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\r\nimport LoginButton from './LoginButton';\r\nimport './login.css';\r\nimport logo from \"../../logo_black.png\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Loading from './Loading';\r\nimport Layout from '../../Layout';\r\n\r\nconst Login = (props) => {\r\n\r\n    const { isLoading, isAuthenticated } = useAuth0();\r\n\r\n    if (isLoading) {\r\n        return <Loading />\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return <Layout />\r\n    }\r\n\r\n    return(\r\n        <div id=\"login-box\">\r\n            <img id=\"logo\" src={logo} alt=\"Armamentum_logo\"></img>\r\n            Welcome to Armamentum!\r\n            <LoginButton />\r\n\r\n            <span id=\"details\">Armamentum is a custom new tab made by Indrajit. It's one of his dream personal projects. <a href=\"https://thisisindrajit.github.io/portfolio\" target=\"_blank\" rel=\"noopener noreferrer\">Click here</a> to view his portfolio!</span>\r\n        </div>\r\n);\r\n}\r\n\r\nexport default Login;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport Login from \"./Body/Login/Login\";\n\nReactDOM.render(\n  <Auth0Provider\n      domain={process.env.REACT_APP_AUTH0_DOMAIN}\n      clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n      redirectUri={window.location.href}\n    >\n    <Login />\n    </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo_black.3b2238ac.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.baeaf0c7.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.0d338a54.png\";"],"sourceRoot":""}