{"version":3,"sources":["Body/Welcome/Welcome.js","Body/Notes/Notes.js","Body/Quote/Quote.js","Body/Weather/Weather.js","Body/Pictures/Pictures.js","Body/Dictionary/Dictionary.js","Layout.js","index.js","logo.png"],"names":["Welcome","hour","Date","getHours","id","Component","Notes","inputHandler","e","index","secindex","newNotes","state","notes","target","value","setState","createHandler","data","title","newnotetitle","body","newnotebody","fetch","method","headers","JSON","stringify","then","res","json","updateStatus","forEach","val","isLoading","showcreatenewnotebox","openbox","createnoteinputHandler","name","updateHandler","isUpdating","newbody","deleteHandler","autosize","document","querySelectorAll","onClick","this","className","onChange","placeholder","rows","map","note","key","defaultValue","PureComponent","Quote","props","quote","author","response","content","Weather","weather","temp","undefined","url","enableLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","message","catch","err","console","error","Math","round","Picture","picgeneratorlinks","picurl","promisesarray","Promise","all","img","href","rel","src","alt","style","marginBottom","client","require","Owlbot","Dictionary","searchHandler","preventDefault","define","word","result","definitions","onSubmit","type","autoComplete","length","pronunciation","definition","example","renderHTML","Layout","tick","time","toLocaleTimeString","setInterval","logo","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.deec181e.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport './welcome.css';\r\n\r\nexport default class Welcome extends Component\r\n{\r\n    render() {\r\n\r\n    var hour = new Date().getHours();\r\n\r\n    return(\r\n        <div id=\"content\">\r\n        <div id=\"welcome\">\r\n            {hour < 12 ? \"Good Morning\" : hour < 16 ? \"Good Afternoon\" : hour < 21 ? \"Good Evening\" : \"Good Night\"} Indrajit!\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport \"./notes.css\";\r\nimport autosize from \"autosize\";\r\n\r\nexport default class Notes extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      notes: [],\r\n      isLoading: true,\r\n      isUpdating:false,\r\n      newnotetitle:\"\", \r\n      newnotebody:\"\",\r\n      showcreatenewnotebox: false,\r\n      updateStatus:[]\r\n    };\r\n  }\r\n\r\n  //https://armamentum.herokuapp.com/notes is the link for the hosted nodejs server\r\n\r\n  componentDidMount() {\r\n    //autosize(this.notebody);\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        //console.log(res);\r\n        this.setState({ notes: res, isLoading: false });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    autosize(document.querySelectorAll(\".note-title\"));\r\n    autosize(document.querySelectorAll(\".note-textarea\"));\r\n  }\r\n\r\n  inputHandler = (e, index, secindex) => {\r\n    const newNotes = [...this.state.notes];\r\n    newNotes[index][secindex] = e.target.value;\r\n    this.setState({ notes: newNotes });\r\n  };\r\n\r\n  createHandler = () => {\r\n\r\n    const data = {\r\n      title: this.state.newnotetitle,\r\n      body: this.state.newnotebody\r\n    }\r\n\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes/postnote\", {\r\n      method: \"POST\",\r\n      headers:{'Content-type': 'application/json'},\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n\r\n        fetch(\"https://armamentum.herokuapp.com/notes\")\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n\r\n            let updateStatus = [];\r\n\r\n            //updateStatus for each note fetched from API\r\n            res.forEach((val,index) => {\r\n              updateStatus[index] = \"\";\r\n            })\r\n\r\n            this.setState({ notes: res, isLoading: false, newnotetitle:\"\", newnotebody:\"\",showcreatenewnotebox: false, updateStatus: updateStatus });\r\n          });\r\n      });\r\n  }\r\n\r\n  openbox = () => {\r\n    this.setState({showcreatenewnotebox: !this.state.showcreatenewnotebox});\r\n  }\r\n\r\n  createnoteinputHandler = (e) => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  updateHandler = (id, index) => {\r\n\r\n    let updateStatus = this.state.updateStatus;\r\n    updateStatus[index] = \"Updating...\"; \r\n\r\n\r\n    this.setState({isUpdating: true, updateStatus: updateStatus});\r\n\r\n    const newbody = {\r\n        title: this.state.notes[index][2],\r\n        body: this.state.notes[index][1]\r\n    }\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes/updatenote/\" + id, {\r\n      method: \"PUT\",\r\n      headers:{'Content-type': 'application/json'},\r\n      body: JSON.stringify(newbody),\r\n    })\r\n      .then(() => {\r\n        //console.log(res);\r\n        updateStatus[index] = \"Updated!\"; \r\n        this.setState({isUpdating:false, updateStatus: updateStatus});\r\n        //alert(\"Updated note!\");\r\n      });\r\n  };\r\n\r\n  deleteHandler = (id) => {\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes/deletenote/\" + id, {\r\n        method: \"DELETE\"\r\n    })\r\n    .then(() => {\r\n\r\n      fetch(\"https://armamentum.herokuapp.com/notes\")\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            this.setState({ notes: res, isLoading: false, showcreatenewnotebox: false });\r\n          });\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"notes\">\r\n        <div id=\"create-new-note\" onClick={() => this.openbox()}>Create a new note</div> \r\n        {this.state.showcreatenewnotebox && \r\n        <div id=\"create-new-note-box\">\r\n          <textarea\r\n                    className=\"note-title\"\r\n                    name={\"newnotetitle\"}\r\n                    onChange={(e) => this.createnoteinputHandler(e)}\r\n                    placeholder={\"Note title\"}\r\n                    value={this.state.newnotetitle}\r\n                    rows={1}\r\n          ></textarea>\r\n          <div className=\"note-body\">\r\n          <textarea\r\n                    className=\"note-textarea\"\r\n                    name={\"newnotebody\"}\r\n                    onChange={(e) => this.createnoteinputHandler(e)}\r\n                    placeholder={\"Note body\"}\r\n                    value={this.state.newnotebody}\r\n                    rows={1}\r\n          ></textarea>\r\n          </div>\r\n          <div className=\"buttons\">\r\n          <div id=\"create-note-button\" onClick={() => this.createHandler()}>Create</div>\r\n          </div>\r\n        </div>\r\n        }\r\n        {this.state.isLoading === true\r\n          ? <div id=\"loading\">Loading notes...</div>\r\n          : \r\n          this.state.notes.map((note, index) => {\r\n              return (\r\n                <div className=\"note\" key={note[3][\"@ref\"].id}>\r\n                  <textarea\r\n                    className=\"note-title\"\r\n                    name={\"title\"}\r\n                    onChange={(e) => this.inputHandler(e, index, 2)}\r\n                    defaultValue={note[2]}\r\n                    rows={1}\r\n                  ></textarea>\r\n                  <div className=\"note-body\">\r\n                    <textarea\r\n                      className=\"note-textarea\"\r\n                      name={\"body\"}\r\n                      onChange={(e) => this.inputHandler(e, index, 1)}\r\n                      defaultValue={note[1]}\r\n                      rows={1}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                  <div className=\"update-status\">{this.state.updateStatus[index]}</div>\r\n                  <div className=\"delete-button\" onClick={() => this.deleteHandler(note[3][\"@ref\"].id)}>Delete</div>\r\n                  <div\r\n                    className=\"save-button\"\r\n                    onClick={() =>\r\n                      this.updateHandler(note[3][\"@ref\"].id, index)\r\n                    }\r\n                  >\r\n                    Save\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './quotes.css';\r\n\r\nexport default class Quote extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n    super(props);\r\n    this.state={\r\n        quote:\"\",\r\n        author:\"\"\r\n    };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://api.quotable.io/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({quote:data.content, author:data.author})\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n    return(\r\n        <div id=\"quote\"> \r\n                <span id=\"content\">{this.state.quote}</span>\r\n                {this.state.quote !== \"\" && <div id=\"line\"></div>}\r\n                <span id=\"author\">{this.state.author}</span>\r\n        </div>\r\n    );\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport \"./weather.css\";\r\n\r\nexport default class Weather extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      weather: {\r\n                  temp: {\r\n                    value: undefined,\r\n                  }\r\n                },\r\n      isLoading: true,\r\n      url:\"\",\r\n      enableLocation:false\r\n    };\r\n  }\r\n  \r\n  async componentDidMount() {\r\n   \r\n    let apikey = \"wnyk8nvno3fgvSgIuM8Y9h490KONwYyW\";\r\n\r\n    if (navigator.geolocation) {\r\n      await navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({url:\r\n      \"https://api.climacell.co/v3/weather/realtime?lat=\" + position.coords.latitude + \"&lon=\" + position.coords.longitude + \"&unit_system=si&fields=temp&apikey=\" +\r\n      apikey, enableLocation:true});\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n    if(this.state.url !== \"\" && this.state.isLoading === true){\r\n\r\n    fetch(this.state.url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n\r\n        if (data.message === \"API rate limit exceeded\") {\r\n          this.setState({\r\n            weather: {\r\n              temp: {\r\n                value: undefined,\r\n              },\r\n            },\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          this.setState({ weather: data, isLoading: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ isLoading: false });\r\n        console.error(\"Error:\" + err);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isLoading === false &&\r\n      this.state.weather.temp.value !== undefined ? (\r\n      <div id=\"weather\">\r\n        <div id=\"city\">Current temperature in your location</div>\r\n        <span id=\"temperature\">\r\n          {Math.round(this.state.weather.temp.value) + \"°C\"}\r\n        </span>\r\n      </div>\r\n    ) : (\r\n      <div id=\"weather\">\r\n        <span>{this.state.isLoading === true && this.state.enableLocation === true ? \"Loading...\" : this.state.enableLocation === false ? \"Please provide location access!\" : \"Error! API rate limit exceeded!\"}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './pictures.css';\r\n\r\nexport default class Picture extends PureComponent\r\n{\r\n    constructor(props)\r\n    {\r\n    super(props);\r\n    this.state={\r\n        picgeneratorlinks: [\"https://picsum.photos/1920/1080?random=1\",\r\n        \"https://picsum.photos/1920/1080?random=2\",\r\n        \"https://picsum.photos/1920/1080?random=3\",\r\n        \"https://picsum.photos/1920/1080?random=4\"],\r\n        picurl:[],\r\n        // downloadurl:[],\r\n        isLoading:true\r\n    };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let promisesarray = [];\r\n\r\n        this.state.picgeneratorlinks.map((val, index) => promisesarray[index] = fetch(val))\r\n\r\n        /*console.log(promisesarray);*/\r\n\r\n        Promise.all(promisesarray)\r\n            .then(data => {\r\n\r\n                let url = [];\r\n                \r\n                data.map((val, index) => url[index] = val.url);\r\n\r\n                this.setState({isLoading:false, picurl: url})\r\n            })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n    const loadingstyle = {\r\n        marginBottom:\"20px\"\r\n    }\r\n\r\n    return(\r\n        <div id=\"pictures-box\">\r\n        <span id=\"title\">Your Gallery</span>\r\n        {this.state.isLoading === false ?\r\n        this.state.picurl.map((img, index) => {\r\n            return(\r\n                <a href={img} key={index} rel=\"noopener noreferrer\" target=\"_blank\"><img className=\"img-holder\" src={img} alt=\"random_photo\"></img></a>\r\n            )\r\n        }) : <span style={loadingstyle}>📷Loading images...</span>}\r\n        </div>\r\n    );\r\n    }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./dictionary.css\";\r\nimport renderHTML from 'react-render-html';\r\nvar Owlbot = require(\"owlbot-js\");\r\n//OWLBOT API KEY - a73d4c94f67c7b70b93d1023e8f8095173fe430d\r\nvar client = Owlbot(\"a73d4c94f67c7b70b93d1023e8f8095173fe430d\");\r\n\r\nexport default class Dictionary extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      word: \"\",\r\n      isLoading: false,\r\n      error: false,\r\n      result: {\r\n        definitions: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  inputHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  searchHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isLoading: true, error:false });\r\n\r\n    client\r\n      .define(this.state.word)\r\n      .then((result) => {\r\n        //console.log(result);\r\n        this.setState({ word: \"\", isLoading: false, result: result });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ error: true, isLoading: false, word: \"\" });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"dictionary\">\r\n        Dictionary\r\n        <div id=\"search\">\r\n        <form method=\"POST\" onSubmit={this.searchHandler}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"word\"\r\n            placeholder=\"Enter the word to search...\"\r\n            value={this.state.word}\r\n            autoComplete=\"off\"\r\n            onChange={this.inputHandler}\r\n          ></input>\r\n          <div className=\"buttons\">\r\n            <button id=\"search-button\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </div>\r\n          </form>\r\n        </div>\r\n        {/* Search results box */}\r\n        {this.state.error === false &&\r\n        (this.state.isLoading || this.state.result.definitions.length > 0) ? (\r\n          <div id=\"search\">\r\n            {this.state.isLoading === true ? (\r\n              \"Searching...\"\r\n            ) : this.state.result.definitions.length > 0 ? (\r\n              <div id=\"search-results\">\r\n                <div id=\"top\">\r\n                  <span id=\"word\">{this.state.result.word}</span>\r\n                  {this.state.result.pronunciation && (\r\n                    <span id=\"pronunciation\">\r\n                      /{this.state.result.pronunciation}/\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {this.state.result.definitions.map((definition, index) => {\r\n                  return (\r\n                    <div className=\"def-box\" key={index}>\r\n                      {definition.type && (\r\n                        <span className=\"type\">{definition.type}</span>\r\n                      )}\r\n                      <span className=\"definition\">\r\n                        {definition.definition}\r\n                      </span>\r\n                      {definition.example && (\r\n                        <span className=\"example\">\r\n                          <b>Example:</b> {renderHTML(definition.example)}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n        {this.state.error === true && (\r\n          <div>{\"Sorry! No definition found for the given word!\"}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\nimport \"./layout.css\";\n// import TOPOLOGY from \"vanta/dist/vanta.topology.min\";\nimport Welcome from \"./Body/Welcome/Welcome\";\nimport logo from \"./logo.png\";\nimport Notes from './Body/Notes/Notes';\nimport Quote from './Body/Quote/Quote';\nimport Weather from './Body/Weather/Weather';\nimport Pictures from './Body/Pictures/Pictures';\nimport Dictionary from \"./Body/Dictionary/Dictionary\";\n\n//Have uninstalled Vanta package since it took a lot of processing to render the background, making the website slow\nclass Layout extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      time: \"\",\n    };\n    //this.vantaRef = React.createRef();\n  }\n\n  tick = () => {\n    this.setState({ time: new Date().toLocaleTimeString() });\n  };\n\n  componentDidMount() {\n    // this.vantaEffect = TOPOLOGY({\n    //   el: this.vantaRef.current,\n    //   mouseControls: true,\n    //   touchControls: true,\n    //   gyroControls: false,\n    //   minHeight: 200.0,\n    //   minWidth: 200.0,\n    //   scale: 1.0,\n    //   scaleMobile: 1.0,\n    //   color: 0xffc0,\n    //   backgroundColor: 0x0,\n    // });\n\n    this.tick();\n  }\n\n  componentDidUpdate() {\n    setInterval(this.tick, 1000);\n  }\n\n  // componentWillUnmount() {\n  //   if (this.vantaEffect) this.vantaEffect.destroy();\n  // }\n\n  render() {\n    return (\n      <div id=\"bg\">\n        {/* logo and title */}\n        <div id=\"titleandlogo\">\n          <img src={logo} alt=\"logo\" id=\"logo\"></img>\n          <span id=\"title\">ARMAMENTUM</span>\n          <div id=\"time\">\n            <h2>{this.state.time}</h2>\n          </div>\n        </div>\n\n        {/*body*/}\n        <div id=\"body\">\n        <Welcome />\n        <Quote />\n        <div id=\"widget-grid\">\n            <div id=\"left-1\">\n            <Weather />\n            <Pictures />\n            <Dictionary />\n            </div>\n            <div id=\"right-1\">\n            <Notes />\n           \n            </div>\n        </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './Layout';\n\nReactDOM.render(\n    <Layout />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.0d338a54.png\";"],"sourceRoot":""}