{"version":3,"sources":["Body/Login/LoginButton.js","Body/Login/Loading.js","Body/Login/Login.js","Body/Welcome/Welcome.js","Body/Notes/Notes.js","Body/Quote/Quote.js","Body/Weather/Weather.js","Body/Pictures/Pictures.js","Body/Dictionary/Dictionary.js","Body/NumberFacts/NumberFacts.js","Layout.js","Routes.js","index.js","logo_black.png","Body/Login/loading.gif","logo.png"],"names":["LoginButton","loginWithRedirect","useAuth0","id","onClick","Loading","src","loading","alt","style","height","Component","Login","props","console","log","isLoading","isAuthenticated","history","push","logo","Welcome","hour","Date","getHours","Notes","inputHandler","e","index","secindex","newNotes","state","notes","target","value","setState","createHandler","data","title","newnotetitle","body","newnotebody","fetch","method","headers","JSON","stringify","then","res","json","updateStatus","forEach","val","showcreatenewnotebox","openbox","createnoteinputHandler","name","updateHandler","isUpdating","newbody","deleteHandler","autosize","document","querySelectorAll","this","className","onChange","placeholder","rows","map","note","key","defaultValue","PureComponent","Quote","quote","author","response","content","Weather","weather","temp","undefined","url","enableLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","message","catch","err","error","Math","round","Picture","picgeneratorlinks","picurl","promisesarray","Promise","all","img","href","rel","marginBottom","client","require","Owlbot","Dictionary","searchHandler","preventDefault","define","word","result","definitions","onSubmit","type","autoComplete","length","pronunciation","definition","example","renderHTML","NumberFacts","fact","number","text","Layout","useState","toLocaleTimeString","time","setTime","tick","useEffect","setInterval","user","Routes","domain","clientId","redirectUri","window","location","path","component","exact","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4c8a911e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <div id=\"login-button\" onClick={() => loginWithRedirect()}>Login</div>;\r\n};\r\n\r\nexport default LoginButton;","import React, { Component } from 'react';\r\nimport loading from './loading.gif';\r\n\r\nexport default class Loading extends Component\r\n{\r\n    render() {\r\n\r\n    return(\r\n        <div id=\"loading-box\">\r\n            <img src={loading} alt=\"loading_gif\" style={{height:\"250px\"}}></img>\r\n        </div>\r\n    );\r\n    }\r\n}","import React from 'react';\r\nimport LoginButton from './LoginButton';\r\nimport './login.css';\r\nimport logo from \"../../logo_black.png\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Loading from './Loading';\r\n\r\nconst Login = (props) => {\r\n\r\n    console.log(\"inside login!\");\r\n\r\n    const { isLoading, isAuthenticated } = useAuth0();\r\n\r\n    console.log(isLoading, isAuthenticated);\r\n\r\n    if (isLoading) {\r\n        return <Loading />\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n    props.history.push(\"/home\");\r\n    }\r\n\r\n    return(\r\n        <div id=\"login-box\">\r\n            <img id=\"logo\" src={logo} alt=\"Armamentum_logo\"></img>\r\n            Welcome to Armamentum!\r\n            <LoginButton />\r\n        </div>\r\n);\r\n}\r\n\r\nexport default Login;","import React,{ Component } from 'react';\r\nimport './welcome.css';\r\n\r\nexport default class Welcome extends Component\r\n{\r\n    render() {\r\n\r\n    var hour = new Date().getHours();\r\n\r\n    return(\r\n        <div id=\"content\">\r\n        <div id=\"welcome\">\r\n            {hour < 12 ? \"Good Morning\" : hour < 16 ? \"Good Afternoon\" : hour < 21 ? \"Good Evening\" : \"Good Night\"} Indrajit!\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport \"./notes.css\";\r\nimport autosize from \"autosize\";\r\n\r\nexport default class Notes extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      notes: [],\r\n      isLoading: true,\r\n      isUpdating: false,\r\n      newnotetitle: \"\",\r\n      newnotebody: \"\",\r\n      showcreatenewnotebox: false,\r\n      updateStatus: [],\r\n    };\r\n  }\r\n\r\n  //https://armamentum.herokuapp.com/notes is the link for the hosted nodejs server\r\n\r\n  componentDidMount() {\r\n    //autosize(this.notebody);\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        //console.log(res);\r\n        this.setState({ notes: res, isLoading: false });\r\n      })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    autosize(document.querySelectorAll(\".note-title\"));\r\n    autosize(document.querySelectorAll(\".note-textarea\"));\r\n  }\r\n\r\n  inputHandler = (e, index, secindex) => {\r\n    const newNotes = [...this.state.notes];\r\n    newNotes[index][secindex] = e.target.value;\r\n    this.setState({ notes: newNotes });\r\n  };\r\n\r\n  createHandler = () => {\r\n    const data = {\r\n      title: this.state.newnotetitle,\r\n      body: this.state.newnotebody,\r\n    };\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes/postnote\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        fetch(\"https://armamentum.herokuapp.com/notes\")\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            let updateStatus = [];\r\n\r\n            //updateStatus for each note fetched from API\r\n            res.forEach((val, index) => {\r\n              updateStatus[index] = \"\";\r\n            });\r\n\r\n            this.setState({\r\n              notes: res,\r\n              isLoading: false,\r\n              newnotetitle: \"\",\r\n              newnotebody: \"\",\r\n              showcreatenewnotebox: false,\r\n              updateStatus: updateStatus,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  openbox = () => {\r\n    this.setState({ showcreatenewnotebox: !this.state.showcreatenewnotebox });\r\n  };\r\n\r\n  createnoteinputHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  updateHandler = (id, index) => {\r\n    let updateStatus = this.state.updateStatus;\r\n    updateStatus[index] = \"Updating...\";\r\n\r\n    this.setState({ isUpdating: true, updateStatus: updateStatus });\r\n\r\n    const newbody = {\r\n      title: this.state.notes[index][2],\r\n      body: this.state.notes[index][1],\r\n    };\r\n\r\n    fetch(\"https://armamentum.herokuapp.com/notes/updatenote/\" + id, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(newbody),\r\n    }).then(() => {\r\n      //console.log(res);\r\n      updateStatus[index] = \"Updated!\";\r\n      this.setState({ isUpdating: false, updateStatus: updateStatus });\r\n      //alert(\"Updated note!\");\r\n    });\r\n  };\r\n\r\n  deleteHandler = (id) => {\r\n    fetch(\"https://armamentum.herokuapp.com/notes/deletenote/\" + id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      fetch(\"https://armamentum.herokuapp.com/notes\")\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          this.setState({\r\n            notes: res,\r\n            isLoading: false,\r\n            showcreatenewnotebox: false,\r\n          });\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    console.log(this.props.name);\r\n\r\n    //for now I have hardcoded the name. Must change it later!\r\n    return this.state.isLoading === true && this.props.name === \"Indrajit Vijayakumar\" ? (\r\n      <div id=\"loading\">Loading notes...</div>\r\n    ) : (\r\n      <div id=\"notes\">\r\n        <div id=\"create-new-note\" onClick={() => this.openbox()}>\r\n          Create a new note\r\n        </div>\r\n        {this.state.showcreatenewnotebox && (\r\n          <div id=\"create-new-note-box\">\r\n            <textarea\r\n              className=\"note-title\"\r\n              name={\"newnotetitle\"}\r\n              onChange={(e) => this.createnoteinputHandler(e)}\r\n              placeholder={\"Note title\"}\r\n              value={this.state.newnotetitle}\r\n              rows={1}\r\n            ></textarea>\r\n            <div className=\"note-body\">\r\n              <textarea\r\n                className=\"note-textarea\"\r\n                name={\"newnotebody\"}\r\n                onChange={(e) => this.createnoteinputHandler(e)}\r\n                placeholder={\"Note body\"}\r\n                value={this.state.newnotebody}\r\n                rows={1}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <div id=\"create-note-button\" onClick={() => this.createHandler()}>\r\n                Create\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.state.notes.map((note, index) => {\r\n          return (\r\n            <div className=\"note\" key={note[3][\"@ref\"].id}>\r\n              <textarea\r\n                className=\"note-title\"\r\n                name={\"title\"}\r\n                onChange={(e) => this.inputHandler(e, index, 2)}\r\n                defaultValue={note[2]}\r\n                rows={1}\r\n              ></textarea>\r\n              <div className=\"note-body\">\r\n                <textarea\r\n                  className=\"note-textarea\"\r\n                  name={\"body\"}\r\n                  onChange={(e) => this.inputHandler(e, index, 1)}\r\n                  defaultValue={note[1]}\r\n                  rows={1}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"buttons\">\r\n                <div className=\"update-status\">\r\n                  {this.state.updateStatus[index]}\r\n                </div>\r\n                <div\r\n                  className=\"delete-button\"\r\n                  onClick={() => this.deleteHandler(note[3][\"@ref\"].id)}\r\n                >\r\n                  Delete\r\n                </div>\r\n                <div\r\n                  className=\"save-button\"\r\n                  onClick={() => this.updateHandler(note[3][\"@ref\"].id, index)}\r\n                >\r\n                  Save\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './quotes.css';\r\n\r\nexport default class Quote extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n    super(props);\r\n    this.state={\r\n        quote:\"\",\r\n        author:\"\"\r\n    };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://api.quotable.io/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({quote:data.content, author:data.author})\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n    return(\r\n        <div id=\"quote\"> \r\n                <span id=\"content\">{this.state.quote}</span>\r\n                {this.state.quote !== \"\" && <div id=\"line\"></div>}\r\n                <span id=\"author\">{this.state.author}</span>\r\n        </div>\r\n    );\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport \"./weather.css\";\r\n\r\nexport default class Weather extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      weather: {\r\n                  temp: {\r\n                    value: undefined,\r\n                  }\r\n                },\r\n      isLoading: true,\r\n      url:\"\",\r\n      enableLocation:false\r\n    };\r\n  }\r\n  \r\n  async componentDidMount() {\r\n   \r\n    if (navigator.geolocation) {\r\n      await navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({url:\r\n      \"https://api.climacell.co/v3/weather/realtime?lat=\" + position.coords.latitude + \"&lon=\" + position.coords.longitude + \"&unit_system=si&fields=temp&apikey=\" + process.env.REACT_APP_WEATHER_API_KEY, enableLocation:true});\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n    if(this.state.url !== \"\" && this.state.isLoading === true){\r\n\r\n    fetch(this.state.url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n\r\n        if (data.message === \"API rate limit exceeded\") {\r\n          this.setState({\r\n            weather: {\r\n              temp: {\r\n                value: undefined,\r\n              },\r\n            },\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          this.setState({ weather: data, isLoading: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ isLoading: false });\r\n        console.error(\"Error:\" + err);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isLoading === false &&\r\n      this.state.weather.temp.value !== undefined ? (\r\n      <div id=\"weather\">\r\n        <div id=\"city\">Current temperature in your location</div>\r\n        <span id=\"temperature\">\r\n          {Math.round(this.state.weather.temp.value) + \"°C\"}\r\n        </span>\r\n      </div>\r\n    ) : (\r\n      <div id=\"weather\">\r\n        <span>{this.state.isLoading === true && this.state.enableLocation === true ? \"Loading...\" : this.state.enableLocation === false ? \"Please provide location access!\" : \"Sorry! Some error occurred! Please try again!\"}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './pictures.css';\r\n\r\nexport default class Picture extends PureComponent\r\n{\r\n    constructor(props)\r\n    {\r\n    super(props);\r\n    this.state={\r\n        picgeneratorlinks: [\"https://picsum.photos/1920/1080?random=1\",\r\n        \"https://picsum.photos/1920/1080?random=2\",\r\n        \"https://picsum.photos/1920/1080?random=3\",\r\n        \"https://picsum.photos/1920/1080?random=4\"],\r\n        picurl:[],\r\n        // downloadurl:[],\r\n        isLoading:true\r\n    };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let promisesarray = [];\r\n\r\n        this.state.picgeneratorlinks.map((val, index) => promisesarray[index] = fetch(val))\r\n\r\n        /*console.log(promisesarray);*/\r\n\r\n        Promise.all(promisesarray)\r\n            .then(data => {\r\n\r\n                let url = [];\r\n                \r\n                data.map((val, index) => url[index] = val.url);\r\n\r\n                this.setState({isLoading:false, picurl: url})\r\n            })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n    const loadingstyle = {\r\n        marginBottom:\"20px\"\r\n    }\r\n\r\n    return(\r\n        <div id=\"pictures-box\">\r\n        <span id=\"title\">Your Gallery</span>\r\n        {this.state.isLoading === false ?\r\n        this.state.picurl.map((img, index) => {\r\n            return(\r\n                <a href={img} key={index} rel=\"noopener noreferrer\" target=\"_blank\"><img className=\"img-holder\" src={img} alt=\"random_photo\"></img></a>\r\n            )\r\n        }) : <span style={loadingstyle}>📷Loading images...</span>}\r\n        </div>\r\n    );\r\n    }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./dictionary.css\";\r\nimport renderHTML from 'react-render-html';\r\nvar Owlbot = require(\"owlbot-js\");\r\n//OWLBOT API KEY - a73d4c94f67c7b70b93d1023e8f8095173fe430d\r\nvar client = Owlbot(\"a73d4c94f67c7b70b93d1023e8f8095173fe430d\");\r\n\r\nexport default class Dictionary extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      word: \"\",\r\n      isLoading: false,\r\n      error: false,\r\n      result: {\r\n        definitions: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  inputHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  searchHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isLoading: true, error:false });\r\n\r\n    client\r\n      .define(this.state.word)\r\n      .then((result) => {\r\n        //console.log(result);\r\n        this.setState({ word: \"\", isLoading: false, result: result });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ error: true, isLoading: false, word: \"\" });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"dictionary\">\r\n        Dictionary\r\n        <div id=\"search\">\r\n        <form method=\"POST\" onSubmit={this.searchHandler}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"word\"\r\n            placeholder=\"Enter the word to search...\"\r\n            value={this.state.word}\r\n            autoComplete=\"off\"\r\n            onChange={this.inputHandler}\r\n          ></input>\r\n          <div className=\"buttons\">\r\n            <button id=\"search-button\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </div>\r\n          </form>\r\n        </div>\r\n        {/* Search results box */}\r\n        {this.state.error === false &&\r\n        (this.state.isLoading || this.state.result.definitions.length > 0) ? (\r\n          <div id=\"search\">\r\n            {this.state.isLoading === true ? (\r\n              \"Searching...\"\r\n            ) : this.state.result.definitions.length > 0 ? (\r\n              <div id=\"search-results\">\r\n                <div id=\"top\">\r\n                  <span id=\"word\">{this.state.result.word}</span>\r\n                  {this.state.result.pronunciation && (\r\n                    <span id=\"pronunciation\">\r\n                      /{this.state.result.pronunciation}/\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {this.state.result.definitions.map((definition, index) => {\r\n                  return (\r\n                    <div className=\"def-box\" key={index}>\r\n                      {definition.type && (\r\n                        <span className=\"type\">{definition.type}</span>\r\n                      )}\r\n                      <span className=\"definition\">\r\n                        {definition.definition}\r\n                      </span>\r\n                      {definition.example && (\r\n                        <span className=\"example\">\r\n                          <b>Example:</b> {renderHTML(definition.example)}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n        {this.state.error === true && (\r\n          <div>{\"Sorry! No definition found for the given word!\"}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./numberfacts.css\";\r\n\r\nexport default class NumberFacts extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      fact: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://armamentum.herokuapp.com/fact\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        this.setState({ isLoading: false, fact: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.state.isLoading === false ? (\r\n      <div id=\"fact-box\">\r\n          {\"Fact about number \" + this.state.fact.number}\r\n          <span id=\"fact\">{this.state.fact.text}</span></div>\r\n    ) : null;\r\n  }\r\n}\r\n","// import React, { PureComponent } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./layout.css\";\n// import TOPOLOGY from \"vanta/dist/vanta.topology.min\";\nimport Welcome from \"./Body/Welcome/Welcome\";\nimport logo from \"./logo.png\";\nimport Notes from \"./Body/Notes/Notes\";\nimport Quote from \"./Body/Quote/Quote\";\nimport Weather from \"./Body/Weather/Weather\";\nimport Pictures from \"./Body/Pictures/Pictures\";\nimport Dictionary from \"./Body/Dictionary/Dictionary\";\nimport NumberFacts from \"./Body/NumberFacts/NumberFacts\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n//Have uninstalled Vanta package since it took a lot of processing to render the background, making the website slow\n// class Layout extends PureComponent {\n//   constructor() {\n//     super();\n//     this.state = {\n//       time: \"\",\n//     };\n//     //this.vantaRef = React.createRef();\n//   }\n\n//   tick = () => {\n//     this.setState({ time: new Date().toLocaleTimeString() });\n//   };\n\n//   componentDidMount() {\n//     // this.vantaEffect = TOPOLOGY({\n//     //   el: this.vantaRef.current,\n//     //   mouseControls: true,\n//     //   touchControls: true,\n//     //   gyroControls: false,\n//     //   minHeight: 200.0,\n//     //   minWidth: 200.0,\n//     //   scale: 1.0,\n//     //   scaleMobile: 1.0,\n//     //   color: 0xffc0,\n//     //   backgroundColor: 0x0,\n//     // });\n\n//     this.tick();\n//   }\n\n//   componentDidUpdate() {\n//     setInterval(this.tick, 1000);\n//   }\n\n//   // componentWillUnmount() {\n//   //   if (this.vantaEffect) this.vantaEffect.destroy();\n//   // }\n\n//   render() {\n\n//     const { isAuthenticated } = useAuth0();\n\n//     return (\n//       isAuthenticated && <div id=\"bg\">\n//         {/* logo and title */}\n//         <div id=\"titleandlogo\">\n//           <img src={logo} alt=\"logo\" id=\"logo\"></img>\n//           <span id=\"title\">ARMAMENTUM</span>\n//           <div id=\"time\">\n//             <h2>{this.state.time}</h2>\n//           </div>\n//         </div>\n\n//         {/*body*/}\n//         <div id=\"body\">\n//         <Welcome />\n//         <Quote />\n//         <div id=\"widget-grid\">\n//             <div id=\"left-1\">\n//             <Weather />\n//             <Dictionary />\n//             <Pictures />\n//             </div>\n//             <div id=\"right-1\">\n//             <NumberFacts />\n//             <Notes />\n//             </div>\n//         </div>\n//         </div>\n\n//       </div>\n//     );\n//   }\n// }\n\nconst Layout = (props) => {\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\n\n  const tick = () => {\n    setTime(new Date().toLocaleTimeString());\n  };\n\n  useEffect(() => {\n    setInterval(tick, 1000);\n  });\n\n  const { user,isAuthenticated } = useAuth0();\n\n  if (!isAuthenticated) {\n    props.history.push(\"/\");\n  }\n\n  return (\n      <div id=\"bg\">\n        {/* logo and title */}\n        <div id=\"titleandlogo\">\n          <img src={logo} alt=\"logo\" id=\"logo\"></img>\n          <span id=\"title\">ARMAMENTUM</span>\n          <div id=\"time\">\n            <h2>{time}</h2>\n          </div>\n        </div>\n\n        {/*body*/}\n        <div id=\"body\">\n          <Welcome />\n          <Quote />\n          <div id=\"widget-grid\">\n            <div id=\"left-1\">\n              <Weather />\n              <Dictionary />\n              <Pictures />\n            </div>\n            <div id=\"right-1\">\n              <NumberFacts />\n              <Notes name={user.name}/>\n            </div>\n          </div>\n        </div>\n\n      </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./Body/Login/Login\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport Layout from \"./Layout\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Auth0Provider\r\n      domain=\"dev-crg4pmj4.us.auth0.com\"\r\n      clientId=\"KPXUmwO2B80UKf3AQIJqcUvCFrZ0pomS\"\r\n      redirectUri={window.location.href}\r\n    >\r\n      <Switch>\r\n        <Route path=\"/\" component={Login} exact />\r\n        <Route path=\"/home\" component={Layout} />\r\n      </Switch>\r\n    </Auth0Provider>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\n// import Loading from \"./Body/Login/Loading\";\n\nReactDOM.render(\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo_black.3b2238ac.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.baeaf0c7.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.0d338a54.png\";"],"sourceRoot":""}